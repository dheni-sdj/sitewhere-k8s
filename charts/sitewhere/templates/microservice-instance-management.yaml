{{- if include "microservices.instance_management.enabled" . }}
{{$data := dict "Values" .Values.services.instance_management "Defaults" .Values.services }}
apiVersion: sitewhere.io/v1alpha3
kind: SiteWhereMicroservice
metadata:
  name: instance-management-microservice
spec:
  replicas: {{ .Values.services.instance_management.replicaCount }}
  instanceName: {{ include "sitewhere.name" . }}
  functionalArea: instance-management
  helm:
    chartName: {{ include "sitewhere.chart" . }}
    releaseName: {{ include "sitewhere.name" . }}
    releaseService: Tiller
  podSpec:
    imageRegistry: {{ .Values.services.image.registry }}
    imageRepository: {{ .Values.services.image.repository }}
    imageTag: {{ .Values.services.image.tag }}
    imagePullPolicy: {{ .Values.services.image.pullPolicy }}
    ports:
      - containerPort: 9000
      - containerPort: 9001
      - containerPort: 900
      - containerPort: {{ .Values.services.metrics.port }}
{{include "sitewhere.microservice.envValues" . | indent 4 }}
      - name: "sitewhere.syncope.host"
        value: "{{ include "sitewhere.name" . }}-{{ index .Values "sitewhere-infra-core" "syncope" "syncopeEnvironment" "coreHost" }}"
      - name: "sitewhere.syncope.port"
        value: "{{ index .Values "sitewhere-infra-core" "syncope" "syncopeEnvironment" "corePort" }}"
{{include "sitewhere.microservice.resources" $data | indent 4 }}
{{include "sitewhere.microservice.probes" . | indent 4 }}
{{include "sitewhere.microservice.imagePullSecrets" . | indent 4 }}
  serviceSpec:
    type: LoadBalancer
    ports:
      - port: 9000
        targetPort: {{ .Values.services.instance_management.service.grpc.api.port }}
        protocol: TCP
        name: grpc-api
      - port: 9001
        targetPort: {{ .Values.services.instance_management.service.grpc.management.port }}
        protocol: TCP
        name: grpc-management
      - port: 9004
        targetPort: {{ .Values.services.instance_management.service.grpc.user_management.port }}
        protocol: TCP
        name: grpc-user-management
      - port: {{ .Values.services.metrics.port }}
        targetPort: {{ .Values.services.metrics.port }}
        protocol: TCP
        name: http-metrics
  debug:
    enabled: false
    jdwpPort: 8001
    jmxPort: 1101
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: {{ include "sitewhere.fullname" . }}-gateway
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http-web-rest
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ include "sitewhere.name" . }}-instance-management
spec:
  hosts:
  - "*"
  gateways:
  - {{ include "sitewhere.fullname" . }}-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        port:
          number: {{ .Values.services.instance_management.service.http.port }}
        host: {{ include "sitewhere.fullname" . }}-instance-management-http
{{- end }}
